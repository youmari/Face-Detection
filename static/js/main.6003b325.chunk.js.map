{"version":3,"sources":["Navigation.js","ImgLinkForm.js","Logo.js","Rank.js","FaceRecognition.js","Signin.js","Register.js","App.js","serviceWorker.js","index.js","brain.png"],"names":["Navigation","onRouteChange","signedIn","style","display","justifyContent","onClick","className","ImgLinkForm","onInputChange","onSubmit","onChange","background","Logo","options","max","height","width","alt","src","brain","Rank","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","left","leftCol","bottom","bottomRow","Signin","htmlFor","type","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","signedin","params","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6003b325.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({onRouteChange ,signedIn}) => {\r\n    if (signedIn){\r\n        return(\r\n                <nav  style={{display:'flex',justifyContent:'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signout')} className='f3 link dim black pa1 pointer underline w-20'>Sign out</p>\r\n                </nav>\r\n            )     \r\n    }else{\r\n        return(\r\n                <nav  style={{display:'flex',justifyContent:'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')} className='f3 link dim black pa1 pointer underline w-20'>Sign in</p>\r\n                    <p onClick={() => onRouteChange('register')} className='f3 link dim black pa1 pointer underline w-20'>Register</p>\r\n                </nav>\r\n            )   \r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './ImgLinkForm.css'\r\n\r\n\r\n\r\nconst ImgLinkForm = ({onInputChange , onSubmit}) => {\r\n    \r\n    return (\r\n       <div>\r\n        <p className=\"f3 center\">\r\n            {'This Magic will detect faces in your pictures. give it a try !'}\r\n        </p>\r\n           <div className='center'>\r\n            <div className='pa4 form br3 shadow-5 w-80 center '>\r\n             <input className='f4 pa2 w-60 ' onChange={onInputChange}/>\r\n             <button style={{background:\"#FF5EDF\"}} className='pa2 w-40 grow link ph3 pv2 dib f4   white' onClick={onSubmit}>Detect</button>\r\n            </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ImgLinkForm;","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css'\r\nimport  brain from './brain.png'\r\nconst Logo = () => {\r\n\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div >\r\n            <Tilt className=\"Tilt br2 shadow-7\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner \" > <img alt='logo' src={brain}/></div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\n\r\nconst Rank = () => {\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div >\r\n            <div className='white f3 center '>\r\n                {'Youmari, your current rank is ...'}\r\n            </div>\r\n            <div className='white f1 center'>\r\n                {'#1'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl , box}) => {\r\n    \r\n    return (\r\n        <div className='center ma' >\r\n            <div className='absolute mt2'>  \r\n                <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top:box.topRow,right:box.rightCol, left:box.leftCol,bottom:box.bottomRow }}></div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\n\r\nconst Signin= ({onRouteChange}) => {\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        \r\n        <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n           <main className=\"pa4 black-80\">\r\n                <form className=\"measure \">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f2 fw6 ph0 mh0 center\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                        \r\n                    </fieldset>\r\n                    <div className=\"center\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b  ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib hover-bg-black hover-white\" type=\"submit\" value=\"Sign in\"/>\r\n                    </div>\r\n                    <div className=\"lh-copy mt3 center\">\r\n                        <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db grow pointer\">Register</p>\r\n                        \r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>\r\n    \r\n    )\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\n\r\nconst Register= ({onRouteChange}) => {\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        \r\n        <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n           <main className=\"pa4 black-80\">\r\n                <form className=\"measure \">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        \r\n                        <legend className=\"f2 fw6 ph0 mh0 center\">Register</legend>\r\n                         <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"Name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                        \r\n                    </fieldset>\r\n                    <div className=\"center\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b  ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib hover-bg-black hover-white\" type=\"submit\" value=\"Register\"/>\r\n                    </div>\r\n                    <div className=\"lh-copy mt3 center\">\r\n   \r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>\r\n    \r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\nimport Navigation from './Navigation';\nimport ImgLinkForm from './ImgLinkForm';\nimport Logo from './Logo';\nimport Rank from './Rank';\nimport FaceRecognition from './FaceRecognition';\nimport './App.css';\nimport 'tachyons';\nimport Particles from 'react-particles-js';\nimport  Clarifai from 'clarifai'\nimport Signin from './Signin';\nimport Register from './Register';\n\nconst app = new Clarifai.App({\n apiKey: 'a02c5a5457e04370b86a03bfd52f4c1f'\n});\n\nconst particlesOptions = {\n\t    \"particles\": {\n\t        \"number\": {\n              \"value\": 150,\n              \"density\":{\n                \"enable\":true,\n                \"value_area\":800\n              }\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n\n}\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box : {},\n      route: 'signin',\n      signedin: false\n    }\n  }\n\n  calculateFaceLocation = (data)=>{\n     const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n     const image = document.getElementById('inputimage');\n     const width = Number(image.width);\n     const height = Number(image.height);\n     return {\n       leftCol:clarifaiFace.left_col * width ,\n       topRow:clarifaiFace.top_row * height,\n       rightCol : width - (clarifaiFace.right_col * width),\n       bottomRow : height - (clarifaiFace.bottom_row * height),\n      }\n  }\n  displayFaceBox = (box) => {\n    this.setState({box: box})\n  }\n\n  onInputChange = (event ) =>{\n    this.setState({input: event.target.value})\n\n  }\n  onSubmit = () => {\n    this.setState({imageUrl:this.state.input});\n    app.models.predict( Clarifai.FACE_DETECT_MODEL,this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err =>console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState({signedIn : false })\n    }else if (route ==='home'){\n      this.setState({signedIn: true})\n    }\n    this.setState({route:route})\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles'  params={particlesOptions} />\n        <Navigation signedIn={this.state.signedIn} onRouteChange={this.onRouteChange}/>\n        {this.state.route === 'home'\n            ? <div>\n                <Logo/>\n                <Rank/>\n                <ImgLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n                <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n              </div>\n              :(this.state.route === 'signin'  \n              ? <Signin onRouteChange={this.onRouteChange}/> \n              : <Register onRouteChange={this.onRouteChange}/> )\n               \n             \n        } \n        \n        } \n      </div>\n    );\n\n  }\n}\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.34f00771.png\";"],"sourceRoot":""}